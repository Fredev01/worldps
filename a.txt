//   Future<void> _selectDate(
//       BuildContext context, ControllerEstadio controller) async {
//     final DateTime? picked = await showDatePicker(
//       context: context,
//       initialDate: controller.estadioDate.value,
//       firstDate: DateTime(1854),
//       lastDate: DateTime.now(),
//     );

//     if (picked != null && picked != controller.estadioDate.value) {
//       controller.estadioDate(picked);
//       final formattedDate =
//           '${picked.day.toString().padLeft(2, '0')}/${picked.month.toString().padLeft(2, '0')}/${picked.year.toString()}';
//       controller.ctrDate.value.text = formattedDate;
//     }
//   }
// }
// @override
//   _EstadioPageState createState() => _EstadioPageState();
// }

// class _EstadioPageState extends State<EstadioPage> {
//   DateTime? _selectedDate;

//   Future<void> _selectDate(BuildContext context) async {
//     DateTime? pickedDate = await showDatePicker(
//       context: context,
//       initialDate: _selectedDate ?? DateTime.now(),
//       firstDate: DateTime(1854),
//       lastDate: DateTime.now(),
//     );

//     if (pickedDate != null && pickedDate != _selectedDate) {
//       setState(() {
//         _selectedDate = pickedDate;
//       });
//     }
//   }